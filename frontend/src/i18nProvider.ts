//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    users: {
      name: 'Users',
      fields: { secretPasscode: 'Secret Passcode', id: 'id' },
    },
    messages: {
      name: 'Messages',
      fields: {
        senderId: 'Sender Id',
        messageContent: 'Message Content',
        timestamp: 'Timestamp',
        recipientId: 'Recipient Id',
        id: 'id',
      },
    },
    shortFilms: {
      name: 'Short Films',
      fields: {
        title: 'Title',
        description: 'Description',
        uploadDate: 'Upload Date',
        uploaderId: 'Uploader Id',
        linkToFilm: 'Link To Film',
        id: 'id',
      },
    },
    chatGroups: {
      name: 'Chat Groups',
      fields: {
        groupName: 'Group Name',
        groupDescription: 'Group Description',
        creationDate: 'Creation Date',
        listOfMemberIds: 'List Of Member Ids',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    users: {
      name: 'Users (fr)',
      fields: { secretPasscode: 'Secret Passcode (fr)', id: 'id' },
    },
    messages: {
      name: 'Messages (fr)',
      fields: {
        senderId: 'Sender Id (fr)',
        messageContent: 'Message Content (fr)',
        timestamp: 'Timestamp (fr)',
        recipientId: 'Recipient Id (fr)',
        id: 'id',
      },
    },
    shortFilms: {
      name: 'Short Films (fr)',
      fields: {
        title: 'Title (fr)',
        description: 'Description (fr)',
        uploadDate: 'Upload Date (fr)',
        uploaderId: 'Uploader Id (fr)',
        linkToFilm: 'Link To Film (fr)',
        id: 'id',
      },
    },
    chatGroups: {
      name: 'Chat Groups (fr)',
      fields: {
        groupName: 'Group Name (fr)',
        groupDescription: 'Group Description (fr)',
        creationDate: 'Creation Date (fr)',
        listOfMemberIds: 'List Of Member Ids (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
